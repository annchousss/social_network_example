{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        content: 'Post1',\n        likes: 10\n      }, {\n        id: 1,\n        content: 'Post2',\n        likes: 20\n      }, {\n        id: 1,\n        content: 'Post3',\n        likes: 30\n      }, {\n        id: 1,\n        content: 'Post4',\n        likes: 40\n      }],\n      mainPhoto: 'https://www.w3schools.com/howto/img_avatar.png',\n      newPostText: 'dich'\n    },\n    dialogPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Name1'\n      }, {\n        id: 2,\n        name: 'Name2'\n      }, {\n        id: 3,\n        name: 'Name3'\n      }, {\n        id: 4,\n        name: 'Name4'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Heyo'\n      }, {\n        id: 2,\n        message: 'Hi'\n      }, {\n        id: 3,\n        message: 'Hello'\n      }, {\n        id: 4,\n        message: 'Salam'\n      }, {\n        id: 5,\n        message: 'Ola'\n      }]\n    }\n  },\n\n  dispatch(action) {\n    switch (action.type) {\n      case ADD_POST:\n        let newPost = {\n          id: 5,\n          content: this._state.profilePage.newPostText,\n          likes: 0\n        };\n\n        this._state.profilePage.posts.push(newPost);\n\n        this._state.profilePage.newPostText = '';\n\n        this._callSubscriber(this._state);\n\n        break;\n\n      case UPDATE_NEW_POST:\n        this._state.profilePage.newPostText = action.newPostText;\n\n        this._callSubscriber(this._state);\n\n        break;\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('CHANGED');\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updatePostActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST,\n    newPostText: text\n  };\n};\nexport default store;","map":{"version":3,"sources":["/Users/anna_tugbaeva/WebstormProjects/my-rapp/src/components/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST","store","_state","profilePage","posts","id","content","likes","mainPhoto","newPostText","dialogPage","dialogs","name","messages","message","dispatch","action","type","newPost","push","_callSubscriber","getState","console","log","subscribe","observer","addPostActionCreator","updatePostActionCreator","text"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\n\nlet store = {\n    _state :  {\n\n        profilePage: {\n            posts: [\n                {id:1, content: 'Post1', likes: 10},\n                {id:1, content: 'Post2', likes: 20},\n                {id:1, content: 'Post3', likes: 30},\n                {id:1, content: 'Post4', likes: 40}\n            ],\n            mainPhoto: 'https://www.w3schools.com/howto/img_avatar.png',\n            newPostText: 'dich'\n        },\n\n        dialogPage: {\n            dialogs: [\n                {id: 1, name: 'Name1'},\n                {id: 2, name: 'Name2'},\n                {id: 3, name: 'Name3'},\n                {id: 4, name: 'Name4'}\n            ],\n            messages: [\n                {id: 1, message: 'Heyo'},\n                {id: 2, message: 'Hi'},\n                {id: 3, message: 'Hello'},\n                {id: 4, message: 'Salam'},\n                {id: 5, message: 'Ola'}\n            ]\n        }\n\n    },\n\n    dispatch(action) {\n        switch (action.type) {\n            case ADD_POST:\n                let newPost = {\n                    id: 5,\n                    content: this._state.profilePage.newPostText,\n                    likes: 0\n                };\n                this._state.profilePage.posts.push(newPost);\n                this._state.profilePage.newPostText = '';\n                this._callSubscriber(this._state);\n                break;\n\n            case UPDATE_NEW_POST:\n                this._state.profilePage.newPostText = action.newPostText;\n                this._callSubscriber(this._state);\n                break;\n        }\n    },\n\n    getState() {\n        return this._state;\n    },\n    _callSubscriber() {\n        console.log('CHANGED');\n    },\n\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    }\n};\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST\n    }\n};\n\nexport const updatePostActionCreator = (text) => {\n    return {\n        type: UPDATE_NEW_POST,\n        newPostText: text\n    }\n};\n\nexport default store;"]},"metadata":{},"sourceType":"module"}