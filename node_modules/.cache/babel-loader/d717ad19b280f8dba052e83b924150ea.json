{"ast":null,"code":"var _jsxFileName = \"/Users/anna_tugbaeva/WebstormProjects/my-rapp/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { addNewMessageActionCreator, updateNewMessageActionCreator } from \"../redux/state\";\n\nconst Dialogs = props => {\n  let dialogsElements = props.state.dialogs.map(dialogItem => React.createElement(DialogItem, {\n    name: dialogItem.name,\n    id: dialogItem.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n  let messagesItems = props.state.messages.map(messagesItem => React.createElement(Message, {\n    message: messagesItem.message,\n    id: messagesItem.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n  let newMessage = React.createRef();\n\n  let addMessage = () => {\n    props.dispatch(addNewMessageActionCreator());\n  };\n\n  let updateMessage = () => {\n    let text = newMessage.current.value;\n    props.dispatch(updateNewMessageActionCreator(text));\n  };\n\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Dialogs:\", dialogsElements), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Messages from the dialog:\", messagesItems, React.createElement(\"textarea\", {\n    onChange: updateMessage,\n    ref: newMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add message\")));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/anna_tugbaeva/WebstormProjects/my-rapp/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","addNewMessageActionCreator","updateNewMessageActionCreator","Dialogs","props","dialogsElements","state","dialogs","map","dialogItem","name","id","messagesItems","messages","messagesItem","message","newMessage","createRef","addMessage","dispatch","updateMessage","text","current","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAa,sBAAb;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,0BAAR,EAAoCC,6BAApC,QAAwE,gBAAxE;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,eAAe,GAAGD,KAAK,CAACE,KAAN,CAAYC,OAAZ,CACjBC,GADiB,CACXC,UAAD,IAAiB,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,UAAU,CAACC,IAA7B;AAAmC,IAAA,EAAE,EAAED,UAAU,CAACE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CAAtB;AAIA,MAAIC,aAAa,GAAGR,KAAK,CAACE,KAAN,CAAYO,QAAZ,CACfL,GADe,CACTM,YAAD,IAAmB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,YAAY,CAACC,OAA/B;AAAwC,IAAA,EAAE,EAAED,YAAY,CAACH,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CAApB;AAGA,MAAIK,UAAU,GAAGnB,KAAK,CAACoB,SAAN,EAAjB;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACnBd,IAAAA,KAAK,CAACe,QAAN,CAAelB,0BAA0B,EAAzC;AACH,GAFD;;AAIA,MAAImB,aAAa,GAAG,MAAM;AACtB,QAAIC,IAAI,GAAGL,UAAU,CAACM,OAAX,CAAmBC,KAA9B;AACAnB,IAAAA,KAAK,CAACe,QAAN,CAAejB,6BAA6B,CAACmB,IAAD,CAA5C;AACH,GAHD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACS,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMF,eADN,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACMO,aADN,EAEI;AAAU,IAAA,QAAQ,EAAEQ,aAApB;AAAmC,IAAA,GAAG,EAAGJ,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAJJ,CADJ;AAYH,CAnCD;;AAqCA,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport s from'./Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {addNewMessageActionCreator, updateNewMessageActionCreator} from \"../redux/state\";\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.state.dialogs\n        .map( (dialogItem) => (<DialogItem name={dialogItem.name} id={dialogItem.id}/>));\n\n\n    let messagesItems = props.state.messages\n        .map( (messagesItem) => (<Message message={messagesItem.message} id={messagesItem.id}/>));\n\n    let newMessage = React.createRef();\n\n    let addMessage = () => {\n        props.dispatch(addNewMessageActionCreator());\n    }\n\n    let updateMessage = () => {\n        let text = newMessage.current.value;\n        props.dispatch(updateNewMessageActionCreator(text));\n    };\n\n\n\n\n    return (\n        <div className={s.dialogs}>\n            <div>Dialogs:\n                { dialogsElements }\n            </div>\n            <div>Messages from the dialog:\n                { messagesItems }\n                <textarea onChange={updateMessage} ref={ newMessage }></textarea>\n                <button onClick={addMessage}>Add message</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}