{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator, updatePostActionCreator } from \"../../redux/state\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../store-context\";\nimport { connect } from \"react-redux\"; // const MyPostsContainer = (props) => {\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//\n//                     let state = store.getState();\n//\n//                     let onAddPost = () => {\n//                         store.dispatch(addPostActionCreator());\n//                     };\n//\n//                     let onPostChange = (text) => {\n//                         store.dispatch(updatePostActionCreator(text));\n//                     };\n//\n//                     return (\n//                         <MyPosts addPost={onAddPost} onPostChange={onPostChange} posts={state.posts} newPostText={state.newPostText}/>\n//                     );\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//         );\n//\n//\n// };\n\nlet mapStateToProps = state => {\n  return {\n    newPostText: state.newPostText,\n    posts: state.posts\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onAddPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChange: text => {\n      dispatch(updatePostActionCreator(text));\n    }\n  };\n};\n\nconst SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/anna_tugbaeva/WebstormProjects/my-rapp/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updatePostActionCreator","MyPosts","StoreContext","connect","mapStateToProps","state","newPostText","posts","mapDispatchToProps","dispatch","onAddPost","onPostChange","text","SuperMyPostsContainer","MyPostsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,EAA8BC,uBAA9B,QAA4D,mBAA5D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,SAAS,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACH,KAHE;AAIHY,IAAAA,YAAY,EAAGC,IAAD,IAAU;AACpBH,MAAAA,QAAQ,CAACT,uBAAuB,CAACY,IAAD,CAAxB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,qBAAqB,GAAGV,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,OAA7C,CAA9B;AAEA,eAAea,gBAAf","sourcesContent":["import React from 'react';\nimport {addPostActionCreator, updatePostActionCreator} from \"../../redux/state\";\nimport MyPosts from \"./MyPosts\";\nimport StoreContext from \"../../../store-context\";\nimport {connect} from \"react-redux\";\n\n// const MyPostsContainer = (props) => {\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//\n//                     let state = store.getState();\n//\n//                     let onAddPost = () => {\n//                         store.dispatch(addPostActionCreator());\n//                     };\n//\n//                     let onPostChange = (text) => {\n//                         store.dispatch(updatePostActionCreator(text));\n//                     };\n//\n//                     return (\n//                         <MyPosts addPost={onAddPost} onPostChange={onPostChange} posts={state.posts} newPostText={state.newPostText}/>\n//                     );\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//         );\n//\n//\n// };\n\nlet mapStateToProps = (state) => {\n    return {\n        newPostText: state.newPostText,\n        posts: state.posts\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onAddPost: () => {\n            dispatch(addPostActionCreator());\n        },\n        onPostChange: (text) => {\n            dispatch(updatePostActionCreator(text));\n        }\n    }\n};\n\nconst SuperMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}