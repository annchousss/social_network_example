{"ast":null,"code":"import _defineProperty from \"/Users/anna_tugbaeva/WebstormProjects/my-rapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Name1'\n  }, {\n    id: 2,\n    name: 'Name2'\n  }, {\n    id: 3,\n    name: 'Name3'\n  }, {\n    id: 4,\n    name: 'Name4'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Heyo'\n  }, {\n    id: 2,\n    message: 'Hi'\n  }, {\n    id: 3,\n    message: 'Hello'\n  }, {\n    id: 4,\n    message: 'Salam'\n  }, {\n    id: 5,\n    message: 'Ola'\n  }],\n  newMessageText: ''\n};\n\nconst dialogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.dialogs = [...state.dialogs];\n        stateCopy.messages = [...state.messages];\n        let newMessage = {\n          id: 6,\n          message: stateCopy.newMessageText\n        };\n        stateCopy.messages.push(newMessage);\n        stateCopy.newMessageText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_MESSAGE:\n      {\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.newMessageText = action.newMessageText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addNewMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const updateNewMessageActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE,\n  newMessageText: text\n});\nexport default dialogReducer;","map":{"version":3,"sources":["/Users/anna_tugbaeva/WebstormProjects/my-rapp/src/components/redux/dialogReducer.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageText","dialogReducer","state","action","type","stateCopy","newMessage","push","addNewMessageActionCreator","updateNewMessageActionCreator","text"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,CADM;AAOfC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJM,EAKN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALM,CAPK;AAcfC,EAAAA,cAAc,EAAE;AAdD,CAAnB;;AAiBA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,WAAL;AAAkB;AACd,YAAIa,SAAS,qBAAOH,KAAP,CAAb;;AACAG,QAAAA,SAAS,CAACV,OAAV,GAAoB,CAAC,GAAGO,KAAK,CAACP,OAAV,CAApB;AACAU,QAAAA,SAAS,CAACP,QAAV,GAAqB,CAAC,GAAGI,KAAK,CAACJ,QAAV,CAArB;AACA,YAAIQ,UAAU,GAAG;AACbV,UAAAA,EAAE,EAAE,CADS;AAEbG,UAAAA,OAAO,EAAEM,SAAS,CAACL;AAFN,SAAjB;AAIAK,QAAAA,SAAS,CAACP,QAAV,CAAmBS,IAAnB,CAAwBD,UAAxB;AACAD,QAAAA,SAAS,CAACL,cAAV,GAA2B,EAA3B;AACA,eAAOK,SAAP;AACH;;AACD,SAAKZ,kBAAL;AAAyB;AACrB,YAAIY,SAAS,qBAAOH,KAAP,CAAb;;AACAG,QAAAA,SAAS,CAACL,cAAV,GAA2BG,MAAM,CAACH,cAAlC;AACA,eAAOK,SAAP;AACH;;AACD;AACI,aAAOH,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,OAAO,MAAMM,0BAA0B,GAAG,OAAO;AAAEJ,EAAAA,IAAI,EAAEZ;AAAR,CAAP,CAAnC;AAEP,OAAO,MAAMiB,6BAA6B,GAAIC,IAAD,KAAW;AAAEN,EAAAA,IAAI,EAAEX,kBAAR;AAA4BO,EAAAA,cAAc,EAAEU;AAA5C,CAAX,CAAtC;AAEP,eAAeT,aAAf","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Name1'},\n        {id: 2, name: 'Name2'},\n        {id: 3, name: 'Name3'},\n        {id: 4, name: 'Name4'}\n    ],\n    messages: [\n        {id: 1, message: 'Heyo'},\n        {id: 2, message: 'Hi'},\n        {id: 3, message: 'Hello'},\n        {id: 4, message: 'Salam'},\n        {id: 5, message: 'Ola'}\n    ],\n    newMessageText: ''\n};\n\nconst dialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let stateCopy = {...state};\n            stateCopy.dialogs = [...state.dialogs];\n            stateCopy.messages = [...state.messages];\n            let newMessage = {\n                id: 6,\n                message: stateCopy.newMessageText\n            };\n            stateCopy.messages.push(newMessage);\n            stateCopy.newMessageText = '';\n            return stateCopy;\n        }\n        case UPDATE_NEW_MESSAGE: {\n            let stateCopy = {...state};\n            stateCopy.newMessageText = action.newMessageText;\n            return stateCopy;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const addNewMessageActionCreator = () => ({ type: ADD_MESSAGE });\n\nexport const updateNewMessageActionCreator = (text) => ({ type: UPDATE_NEW_MESSAGE, newMessageText: text });\n\nexport default dialogReducer;"]},"metadata":{},"sourceType":"module"}